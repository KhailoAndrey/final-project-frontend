{"version":3,"file":"static/js/262.0f515103.chunk.js","mappings":"6IA0UA,IAAe,IAA0B,+D,wNCtU5BA,EAAmBC,EAAAA,KAAaC,MAAM,CACjDC,KAAMF,EAAAA,KACHG,UAASC,EAAAA,EAAAA,GAAE,wBACXC,IAAI,GAAGD,EAAAA,EAAAA,GAAE,aACTE,IAAI,IAAIF,EAAAA,EAAAA,GAAE,aACVG,QAAQ,0GAAoCH,EAAAA,EAAAA,GAAE,gBACjDI,MAAOR,EAAAA,KACJQ,OAAMJ,EAAAA,EAAAA,GAAE,sBACRD,UAASC,EAAAA,EAAAA,GAAE,yBACXG,QAAQ,2CAA2CH,EAAAA,EAAAA,GAAE,iBACxDK,SAAUT,EAAAA,KACPG,UAASC,EAAAA,EAAAA,GAAE,4BACXC,IAAI,GAAGD,EAAAA,EAAAA,GAAE,iBACTE,IAAI,IAAIF,EAAAA,EAAAA,GAAE,iBACVG,QAAQ,mCAAmCH,EAAAA,EAAAA,GAAE,oBAChDM,gBAAiBV,EAAAA,KAAaW,KAAK,YAAY,SAACF,EAAUG,GACxD,OAAOH,EACHG,EACGT,UAASC,EAAAA,EAAAA,GAAE,+BACXS,MAAM,CAACb,EAAAA,GAAQ,cAAcI,EAAAA,EAAAA,GAAE,4BAClCQ,EAAOE,aACb,M,uCCtBWC,EAAgBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6fA0B1BC,EAAmBJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8LAc7BG,EAAaN,EAAAA,GAAOO,GAAEC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,6VAkBtBM,EAAYT,EAAAA,GAAOU,MAAKC,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,gpBAgCxBS,EAAqBZ,EAAAA,GAAOU,MAAKG,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,gpBAgCjCW,EAAad,EAAAA,GAAOe,OAAMC,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,mmBA8B1Bc,EAAWjB,EAAAA,GAAOkB,EAACC,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,oLAUnBiB,GAAWpB,EAAAA,EAAAA,IAAOqB,EAAAA,GAAPrB,CAAYsB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,2FAOvBoB,EAAevB,EAAAA,GAAOC,IAAGuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,iCAIzBsB,EAAYzB,EAAAA,GAAOkB,EAACQ,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,kTAiBpBwB,EAAc3B,EAAAA,GAAOkB,EAACU,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,kTAiBtB0B,EAAe7B,EAAAA,GAAOC,IAAG6B,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,8H,UCzLhC4B,EAAe,WACnB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,GAAIC,OAAQ,GAAGC,UACzBH,EAAAA,EAAAA,KAAA,OACEI,KAAI,GAAAC,OAAKC,EAAAA,EAAG,mBACZC,MAAO,CACLC,OAAQ,wBAEVP,MAAO,GACPC,OAAQ,MAIhB,EAEMO,EAAc,WAClB,OACET,EAAAA,EAAAA,KAAA,OAAKC,MAAO,GAAIC,OAAQ,GAAGC,UACzBH,EAAAA,EAAAA,KAAA,OACEI,KAAI,GAAAC,OAAKC,EAAAA,EAAG,aACZC,MAAO,CACLC,OAAQ,wBAEVP,MAAO,GACPC,OAAQ,MAIhB,EAEMQ,EAAiB,WACrB,OACEV,EAAAA,EAAAA,KAAA,OAAKC,MAAO,GAAIC,OAAQ,GAAGC,UACzBH,EAAAA,EAAAA,KAAA,OACEI,KAAI,GAAAC,OAAKC,EAAAA,EAAG,eACZC,MAAO,CACLC,OAAQ,yBAEVP,MAAO,GACPC,OAAQ,MAIhB,EAsTA,EApTqB,WACnB,IAAQ9C,GAAMuD,EAAAA,EAAAA,MAANvD,EACFwD,GAAWC,EAAAA,EAAAA,MAEjBC,GAA8CC,EAAAA,EAAAA,UAAS,YAAWC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3DI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAC1CI,GACEL,EAAAA,EAAAA,UAAS,YAAWM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GADfE,EAAsBD,EAAA,GAAEE,EAAyBF,EAAA,GAGlDG,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbxE,KAAM,GACNM,MAAO,GACPC,SAAU,GACVC,gBAAiB,IAGnBX,iBAAkBA,EAElB4E,SAAS,WAAD,IAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAOC,EAAMC,GAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKpB,OALwBN,EAASD,EAATC,UACnBC,EAAc,CAClBlF,KAAM+E,EAAO/E,KACbM,MAAOyE,EAAOzE,MACdC,SAAUwE,EAAOxE,UAClB8E,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEwB7B,GAAS8B,EAAAA,EAAAA,UAASN,IAAc,KAAD,GAAhDC,EAAQE,EAAAI,MACDC,OACXC,EAAAA,EAAAA,GAAWR,EAASO,MAAME,KAAKC,SAE/BZ,IACDI,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEDU,QAAQL,MAAKL,EAAAS,IAAQ,yBAAAT,EAAAW,OAAA,GAAAlB,EAAA,kBAExB,gBAAAmB,EAAAC,GAAA,OAAAxB,EAAAyB,MAAA,KAAAC,UAAA,EAhBQ,KAkCLC,GACH/B,EAAOgC,QAAQtG,MAAQsE,EAAOiC,YAAc,IAC7CjC,EAAOkC,OAAOxG,MACdsE,EAAOS,OAAO/E,KAEVyG,EACJnC,EAAOgC,QAAQtG,OAASsE,EAAOkC,OAAOxG,MAAQsE,EAAOS,OAAO/E,KAExD0G,GACHpC,EAAOgC,QAAQhG,OAASgE,EAAOiC,YAAc,IAC9CjC,EAAOkC,OAAOlG,OACdgE,EAAOS,OAAOzE,MAEVqG,EACJrC,EAAOgC,QAAQhG,QAAUgE,EAAOkC,OAAOlG,OAASgE,EAAOS,OAAOzE,MAE1DsG,GACHtC,EAAOgC,QAAQ/F,UAAY+D,EAAOiC,YAAc,IACjDjC,EAAOkC,OAAOjG,UACd+D,EAAOS,OAAOxE,SAEVsG,EACJvC,EAAOgC,QAAQ/F,WACd+D,EAAOkC,OAAOjG,UACf+D,EAAOS,OAAOxE,SAEVuG,GACHxC,EAAOgC,QAAQ9F,iBAAmB8D,EAAOiC,YAAc,IACxDjC,EAAOkC,OAAOhG,iBACd8D,EAAOS,OAAOvE,gBAEVuG,EACJzC,EAAOgC,QAAQ9F,kBACd8D,EAAOkC,OAAOhG,iBACf8D,EAAOS,OAAOvE,gBAEVwG,EAAc,SAAAC,GAClB3C,EAAO4C,cAAcD,EAAO,GAC9B,EAEA,OACEnE,EAAAA,EAAAA,KAACjC,EAAa,CAAAoC,UACZkE,EAAAA,EAAAA,MAAA,QAAM1C,SAAUH,EAAO8C,aAAanE,SAAA,EAClCH,EAAAA,EAAAA,KAAC1B,EAAU,CAAA6B,SAAE/C,EAAE,mBACfiH,EAAAA,EAAAA,MAACjG,EAAgB,CAAA+B,SAAA,EACfkE,EAAAA,EAAAA,MAAA,OAAAlE,SAAA,EACEH,EAAAA,EAAAA,KAAA,SAAOuE,QAAQ,OAAOC,QAAM,EAAArE,SAAC,UAG7BkE,EAAAA,EAAAA,MAAC9E,EAAY,CAAAY,SAAA,EACXH,EAAAA,EAAAA,KAACpB,EAAkB,CACjB6F,GAAG,OACHC,MAAOlD,EAAOS,OAAO/E,KACrByH,SAAUnD,EAAOoD,aACjB1H,KAAK,OACL2H,YAAazH,EAAE,QACf0H,OAvES,WACrBtD,EAAOuD,YAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIxD,EAAOgC,SAAO,IAAEtG,MAAM,IAC/C,EAsEc+H,UACE1B,EACI,cACAI,EACA,gBACA,KAGPnC,EAAOgC,QAAQtG,MAAQsE,EAAOkC,OAAOxG,OACpC8C,EAAAA,EAAAA,KAACP,EAAS,CAAAU,SAAEqB,EAAOkC,OAAOxG,QAE5BmH,EAAAA,EAAAA,MAACxE,EAAY,CAAAM,SAAA,CACVoD,IACCvD,EAAAA,EAAAA,KAAA,OACEC,MAAO,GACPC,OAAQ,GACRgF,QAAS,kBAAMhB,EAAY,OAAO,EAAC/D,UAEnCH,EAAAA,EAAAA,KAAA,OACEI,KAAI,GAAAC,OAAKC,EAAAA,EAAG,eACZC,MAAO,CACLC,OAAQ,yBAEVP,MAAO,GACPC,OAAQ,OAIbyD,IAAmB3D,EAAAA,EAAAA,KAACU,EAAc,cAIzC2D,EAAAA,EAAAA,MAAA,OAAAlE,SAAA,EACEH,EAAAA,EAAAA,KAAA,SAAOuE,QAAQ,QAAQC,QAAM,EAAArE,SAAC,WAG9BkE,EAAAA,EAAAA,MAAC9E,EAAY,CAAAY,SAAA,EACXH,EAAAA,EAAAA,KAACpB,EAAkB,CACjB6F,GAAG,QACHvH,KAAK,QACLwH,MAAOlD,EAAOS,OAAOzE,MACrBmH,SAAUnD,EAAOoD,aACjBC,YAAazH,EAAE,SACf0H,OA/GU,WACtBtD,EAAOuD,YAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIxD,EAAOgC,SAAO,IAAEhG,OAAO,IAChD,EA8GcyH,UACErB,EACI,cACAC,EACA,gBACA,KAGPrC,EAAOgC,QAAQhG,OAASgE,EAAOkC,OAAOlG,QACrCwC,EAAAA,EAAAA,KAACP,EAAS,CAAAU,SAAEqB,EAAOkC,OAAOlG,SAE5B6G,EAAAA,EAAAA,MAACxE,EAAY,CAAAM,SAAA,CACVyD,IACC5D,EAAAA,EAAAA,KAAA,OACEC,MAAO,GACPC,OAAQ,GACRgF,QAAS,kBAAMhB,EAAY,QAAQ,EAAC/D,UAEpCH,EAAAA,EAAAA,KAAA,OACEI,KAAI,GAAAC,OAAKC,EAAAA,EAAG,eACZC,MAAO,CACLC,OAAQ,yBAEVP,MAAO,GACPC,OAAQ,OAIb2D,IAAoB7D,EAAAA,EAAAA,KAACU,EAAc,cAI1C2D,EAAAA,EAAAA,MAAA,OAAAlE,SAAA,EACEH,EAAAA,EAAAA,KAAA,SAAOuE,QAAQ,WAAWC,QAAM,EAAArE,SAAC,cAGjCkE,EAAAA,EAAAA,MAAC9E,EAAY,CAAAY,SAAA,EACXH,EAAAA,EAAAA,KAACvB,EAAS,CACRgG,GAAG,WACHU,KAAMjE,EACNhE,KAAK,WACLwH,MAAOlD,EAAOS,OAAOxE,SACrBkH,SAAUnD,EAAOoD,aACjBC,YAAazH,EAAE,YACf0H,OAxJa,WACzBtD,EAAOuD,YAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIxD,EAAOgC,SAAO,IAAE/F,UAAU,IACnD,EAuJcwH,UACEnB,EACI,cACAC,EACA,gBACA,MAGRM,EAAAA,EAAAA,MAACxE,EAAY,CAAAM,SAAA,CACU,aAApBe,GACClB,EAAAA,EAAAA,KAAA,QAAMkF,QAAS,kBAAM/D,EAAmB,OAAO,EAAChB,UAC9CH,EAAAA,EAAAA,KAACD,EAAY,OAGfC,EAAAA,EAAAA,KAAA,QAAMkF,QAAS,kBAAM/D,EAAmB,WAAW,EAAChB,UAClDH,EAAAA,EAAAA,KAACS,EAAW,MAGfqD,IACC9D,EAAAA,EAAAA,KAAA,OACEC,MAAO,GACPC,OAAQ,GACRgF,QAAS,kBAAMhB,EAAY,WAAW,EAAC/D,UAEvCH,EAAAA,EAAAA,KAAA,OACEI,KAAI,GAAAC,OAAKC,EAAAA,EAAG,eACZC,MAAO,CACLC,OAAQ,yBAEVP,MAAO,GACPC,OAAQ,OAIb6D,IAAuB/D,EAAAA,EAAAA,KAACU,EAAc,OAExCc,EAAOgC,QAAQ/F,UAAY+D,EAAOkC,OAAOjG,WACxCuC,EAAAA,EAAAA,KAACP,EAAS,CAAAU,SAAEqB,EAAOkC,OAAOjG,WAE3BsG,IACC/D,EAAAA,EAAAA,KAACL,EAAW,CAAAQ,SAAE/C,EAAE,+BAItBiH,EAAAA,EAAAA,MAAA,OAAAlE,SAAA,EACEH,EAAAA,EAAAA,KAAA,SAAOuE,QAAQ,kBAAkBC,QAAM,EAAArE,SAAC,sBAGxCkE,EAAAA,EAAAA,MAAC9E,EAAY,CAAAY,SAAA,EACXH,EAAAA,EAAAA,KAACvB,EAAS,CACRgG,GAAG,kBACHU,KAAM7D,EACNpE,KAAK,kBACLwH,MAAOlD,EAAOS,OAAOvE,gBACrBiH,SAAUnD,EAAOoD,aACjBC,YAAazH,EAAE,oBACf0H,OA7MoB,WAChCtD,EAAOuD,YAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIxD,EAAOgC,SAAO,IAAE9F,iBAAiB,IAC1D,EA4McuH,UACEjB,EACI,cACAC,EACA,gBACA,MAGRI,EAAAA,EAAAA,MAACxE,EAAY,CAAAM,SAAA,CACiB,aAA3BmB,GACCtB,EAAAA,EAAAA,KAAA,QAAMkF,QAAS,kBAAM3D,EAA0B,OAAO,EAACpB,UACrDH,EAAAA,EAAAA,KAACD,EAAY,OAGfC,EAAAA,EAAAA,KAAA,QAAMkF,QAAS,kBAAM3D,EAA0B,WAAW,EAACpB,UACzDH,EAAAA,EAAAA,KAACS,EAAW,MAGfuD,IACChE,EAAAA,EAAAA,KAAA,OACEC,MAAO,GACPC,OAAQ,GACRgF,QAAS,kBAAMhB,EAAY,kBAAkB,EAAC/D,UAE9CH,EAAAA,EAAAA,KAAA,OACEI,KAAI,GAAAC,OAAKC,EAAAA,EAAG,eACZC,MAAO,CACLC,OAAQ,yBAEVP,MAAO,GACPC,OAAQ,OAIb+D,IAA8BjE,EAAAA,EAAAA,KAACU,EAAc,OAE/Cc,EAAOgC,QAAQ9F,iBACd8D,EAAOkC,OAAOhG,kBACZsC,EAAAA,EAAAA,KAACP,EAAS,CAAAU,SAAEqB,EAAOkC,OAAOhG,4BAKpCsC,EAAAA,EAAAA,KAAClB,EAAU,CAACqG,KAAK,SAAQhF,SAAE/C,EAAE,mBAC7BiH,EAAAA,EAAAA,MAACpF,EAAQ,CAAAkB,SAAA,CACN/C,EAAE,2BACH4C,EAAAA,EAAAA,KAACZ,EAAQ,CAACgG,GAAG,SAAQjF,SAAE/C,EAAE,uBAKnC,EClXA,EAJqB,WACnB,OAAO4C,EAAAA,EAAAA,KAACqF,EAAY,GACtB,C","sources":["images/Icons/symbol-defs.svg","components/Forms/RegisterForm/ValidationRegister.js","components/Forms/RegisterForm/RegisterForm.styled.js","components/Forms/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["var _symbol, _symbol2, _symbol3, _symbol4, _symbol5, _symbol6, _symbol7, _symbol8, _symbol9, _symbol10, _symbol11, _symbol12, _symbol13, _symbol14, _symbol15, _symbol16, _symbol17, _symbol18, _symbol19, _symbol20, _symbol21, _symbol22, _symbol23, _symbol24, _symbol25, _symbol26;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSymbolDefs(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow-left\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.5,\n    d: \"M4 12h16M4 12l6-6M4 12l6 6\"\n  }))), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-camera\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.5,\n    d: \"M12 16c1.657 0 3-1.343 3-3s-1.343-3-3-3c-1.657 0-3 1.343-3 3s1.343 3 3 3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.5,\n    d: \"M3 9c0-1.105 0.895-2 2-2h2.5c0.552 0 1-0.448 1-1s0.448-1 1-1h5c0.552 0 1 0.448 1 1s0.448 1 1 1h2.5c1.105 0 2 0.895 2 2v8c0 1.105-0.895 2-2 2h-14c-1.105 0-2-0.895-2-2v-8z\"\n  }))), _symbol3 || (_symbol3 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-check\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.5,\n    d: \"M20 7l-11 11-5-5\"\n  }))), _symbol4 || (_symbol4 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-check-round\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.5,\n    d: \"M17 9l-7 7-3-3M8 20h8c2.209 0 4-1.791 4-4v-8c0-2.209-1.791-4-4-4h-8c-2.209 0-4 1.791-4 4v8c0 2.209 1.791 4 4 4z\"\n  }))), _symbol5 || (_symbol5 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-chevron-down\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.5,\n    d: \"M4 9l8 8 8-8\"\n  }))), _symbol6 || (_symbol6 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-chevron-up\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.5,\n    d: \"M20 15l-8-8-8 8\"\n  }))), _symbol7 || (_symbol7 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-clock\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.44,\n    d: \"M12.247 7.2v4.8l2.88 2.88M20.887 12c0 4.772-3.868 8.64-8.64 8.64s-8.64-3.868-8.64-8.64c0-4.772 3.868-8.64 8.64-8.64s8.64 3.868 8.64 8.64z\"\n  }))), _symbol8 || (_symbol8 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-cross\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.5,\n    d: \"M19 5l-14 14M5 5l14 14\"\n  }))), _symbol9 || (_symbol9 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-cross-small\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.5,\n    d: \"M16 8l-8 8M8 8l8 8\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-edit\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#54adff\",\n    style: {\n      fill: \"var(--color1, #54adff)\"\n    },\n    d: \"M5 15.706l-0.53-0.53c-0.136 0.136-0.22 0.323-0.22 0.53v0h0.75zM15.706 5l0.53-0.53c-0.136-0.136-0.323-0.219-0.53-0.219s-0.394 0.084-0.53 0.219v0l0.53 0.53zM19 8.294l0.53 0.53c0.136-0.136 0.219-0.323 0.219-0.53s-0.084-0.394-0.219-0.53v0l-0.53 0.53zM8.294 19v0.75c0.207-0 0.394-0.084 0.53-0.22v0l-0.53-0.53zM5 19h-0.75c0 0.414 0.336 0.75 0.75 0.75v-0.75zM11.588 18.25c-0.414 0-0.75 0.336-0.75 0.75s0.336 0.75 0.75 0.75v0-1.5zM18.588 19.75c0.414 0 0.75-0.336 0.75-0.75s-0.336-0.75-0.75-0.75v0 1.5zM5.53 16.236l10.706-10.706-1.060-1.060-10.706 10.706 1.060 1.060zM15.176 5.53l3.294 3.294 1.060-1.060-3.294-3.294-1.060 1.060zM18.47 7.764l-10.706 10.706 1.060 1.060 10.706-10.706-1.060-1.060zM8.294 18.25h-3.294v1.5h3.294v-1.5zM5.75 19v-3.294h-1.5v3.294h1.5zM12.705 8l3.294 3.295 1.060-1.060-3.293-3.295-1.061 1.060zM11.588 19.75h7v-1.5h-7v1.5z\"\n  })), _symbol10 || (_symbol10 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-female\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.44,\n    d: \"M12.247 12.96c2.651 0 4.8-2.149 4.8-4.8s-2.149-4.8-4.8-4.8c-2.651 0-4.8 2.149-4.8 4.8s2.149 4.8 4.8 4.8zM12.247 12.96v7.68M9.367 17.76h5.76\"\n  }))), _symbol11 || (_symbol11 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-filters\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.5,\n    d: \"M14 5c0-1.105-0.895-2-2-2s-2 0.895-2 2M14 5c0 1.105-0.895 2-2 2s-2-0.895-2-2M14 5h6M10 5h-6M16 12c0 1.105 0.895 2 2 2s2-0.895 2-2c0-1.105-0.895-2-2-2s-2 0.895-2 2zM16 12h-12M8 19c0-1.105-0.895-2-2-2s-2 0.895-2 2c0 1.105 0.895 2 2 2s2-0.895 2-2zM8 19h12\"\n  }))), _symbol12 || (_symbol12 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-filter\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.44,\n    d: \"M4.567 4.32l4.8 7.68v5.76l5.76 2.88v-8.64l4.8-7.68h-15.36z\"\n  }))), _symbol13 || (_symbol13 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-heart\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.5,\n    d: \"M4.331 12.047l7.669 7.953 7.669-7.953c0.852-0.884 1.331-2.083 1.331-3.333 0-2.604-2.035-4.714-4.546-4.714-1.206 0-2.362 0.497-3.214 1.381l-1.24 1.286-1.24-1.286c-0.853-0.884-2.009-1.381-3.214-1.381-2.511 0-4.546 2.111-4.546 4.714 0 1.25 0.479 2.449 1.331 3.333z\"\n  }))), _symbol14 || (_symbol14 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-heart-fill\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.3314 12.0474L12 20L19.6686 12.0474C20.5211 11.1633 21 9.96429 21 8.71405C21 6.11055 18.9648 4 16.4543 4C15.2487 4 14.0925 4.49666 13.24 5.38071L12 6.66667L10.76 5.38071C9.90749 4.49666 8.75128 4 7.54569 4C5.03517 4 3 6.11055 3 8.71405C3 9.96429 3.47892 11.1633 4.3314 12.0474Z\",\n    fill: \"#54ADFF\",\n    stroke: \"#54ADFF\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))), _symbol15 || (_symbol15 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-location\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.44,\n    d: \"M19.927 11.040c0 4.242-3.438 7.68-7.68 9.6-4.242-1.92-7.68-5.358-7.68-9.6s3.438-7.68 7.68-7.68c4.242 0 7.68 3.438 7.68 7.68z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.44,\n    d: \"M15.127 11.040c0 1.591-1.289 2.88-2.88 2.88s-2.88-1.289-2.88-2.88c0-1.591 1.289-2.88 2.88-2.88s2.88 1.289 2.88 2.88z\"\n  }))), _symbol16 || (_symbol16 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-logout\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.5,\n    d: \"M14 4h4c1.105 0 2 0.895 2 2v12c0 1.105-0.895 2-2 2h-4M3 12h12M3 12l4-4M3 12l4 4\"\n  }))), _symbol17 || (_symbol17 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-male\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.44,\n    d: \"M12.247 11.040c-2.651 0-4.8 2.149-4.8 4.8s2.149 4.8 4.8 4.8c2.651 0 4.8-2.149 4.8-4.8s-2.149-4.8-4.8-4.8zM12.247 11.040v-7.68M12.247 3.36l3.84 3.84M12.247 3.36l-3.84 3.84\"\n  }))), _symbol18 || (_symbol18 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-burger\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.5,\n    d: \"M4 7h16M4 12h16M4 17h16\"\n  }))), _symbol19 || (_symbol19 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-paw\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.361 14.362c-0.273-2.013-1.542-3.679-3.287-4.503l-0.035-0.015c-0.724-0.347-1.573-0.55-2.471-0.55-1.16 0-2.241 0.339-3.148 0.924l0.023-0.014-4.074 2.579c-0.667 0.425-1.179 1.041-1.464 1.77l-0.009 0.025c-0.158 0.394-0.249 0.851-0.249 1.33 0 0.353 0.050 0.694 0.142 1.016l-0.006-0.026c0.222 0.788 0.677 1.45 1.286 1.924l0.008 0.006c0.631 0.491 1.388 0.76 2.189 0.778l0.052 0.001c2.090 0.065 3.948 1.003 5.233 2.459l0.007 0.008c0.512 0.583 1.198 1.001 1.978 1.173l0.024 0.005c0.234 0.053 0.504 0.084 0.78 0.084 0.555 0 1.081-0.123 1.553-0.343l-0.023 0.009c0.731-0.336 1.317-0.881 1.695-1.558l0.010-0.019c0.388-0.7 0.536-1.49 0.43-2.283l-0.644-4.779zM13.287 21.721c-0.927 0.421-2 0.19-2.672-0.575-0.781-0.887-1.729-1.606-2.797-2.114l-0.053-0.022c-1.015-0.485-2.203-0.781-3.457-0.81l-0.010-0-0.035-0.001c-1.014-0.035-1.858-0.726-2.12-1.661l-0.004-0.016c-0.054-0.186-0.086-0.399-0.086-0.619 0-0.81 0.422-1.521 1.058-1.925l0.009-0.006 4.075-2.58c0.672-0.434 1.492-0.691 2.373-0.691 0.681 0 1.327 0.154 1.903 0.43l-0.027-0.011c1.351 0.637 2.314 1.902 2.519 3.407l0.003 0.023 0.643 4.78c0.014 0.094 0.022 0.202 0.022 0.313 0 0.92-0.545 1.713-1.33 2.073l-0.014 0.006zM4.721 9.395c0.828 0.058 1.624-0.259 2.244-0.892 0.59-0.602 0.948-1.426 1.010-2.318 0.060-0.892-0.182-1.757-0.682-2.435-0.527-0.711-1.272-1.135-2.099-1.192-1.662-0.115-3.12 1.325-3.252 3.211-0.103 1.502 0.668 2.84 1.825 3.38 0.296 0.137 0.617 0.223 0.954 0.246zM3.346 5.865c0.077-1.11 0.863-1.965 1.752-1.903 0.16 0.010 0.316 0.052 0.463 0.12 0.227 0.106 0.432 0.277 0.6 0.505 0.303 0.409 0.448 0.942 0.41 1.501s-0.256 1.067-0.612 1.431c-0.326 0.333-0.731 0.501-1.14 0.473-0.889-0.061-1.55-1.015-1.473-2.126zM10.641 8.647c1.762 0.821 3.957-0.143 4.893-2.15 0.936-2.008 0.264-4.31-1.498-5.131-1.761-0.822-3.956 0.143-4.892 2.15-0.936 2.008-0.264 4.31 1.497 5.13zM13.442 2.641c1.059 0.493 1.425 1.956 0.817 3.261-0.608 1.304-1.965 1.963-3.023 1.47-1.059-0.494-1.425-1.957-0.817-3.26 0.608-1.305 1.964-1.965 3.023-1.471zM15.744 12.114c0.229 0.216 0.485 0.388 0.76 0.517 1.285 0.599 2.974 0.248 4.122-0.967 0.66-0.699 1.050-1.582 1.097-2.486 0.050-0.947-0.278-1.804-0.923-2.413-0.644-0.608-1.518-0.888-2.46-0.785-0.901 0.098-1.76 0.536-2.421 1.236-1.394 1.474-1.472 3.672-0.175 4.898zM16.941 8.182c0.432-0.457 0.982-0.742 1.55-0.804 0.526-0.057 1.003 0.089 1.343 0.41 0.34 0.32 0.512 0.789 0.484 1.317-0.030 0.57-0.283 1.136-0.715 1.593-0.86 0.91-2.159 1.088-2.893 0.394-0.733-0.694-0.63-2 0.231-2.91zM22.67 14.827c-0.797-1.465-2.795-1.923-4.456-1.022-1.66 0.902-2.363 2.827-1.569 4.29 0.29 0.535 0.74 0.935 1.274 1.185 0.933 0.435 2.125 0.411 3.181-0.162 1.66-0.902 2.364-2.827 1.57-4.291zM20.43 17.882c-0.98 0.531-2.124 0.326-2.548-0.457s0.026-1.852 1.004-2.384c0.65-0.353 1.372-0.38 1.909-0.13 0.271 0.126 0.496 0.324 0.639 0.587 0.424 0.783-0.027 1.852-1.005 2.384z\"\n  }))), _symbol20 || (_symbol20 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-plus\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2,\n    d: \"M12 20v-8M12 12v-8M12 12h8M12 12h-8\"\n  }))), _symbol21 || (_symbol21 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-plus-small\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.5,\n    d: \"M12 7v10M7 12h10\"\n  }))), _symbol22 || (_symbol22 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-round\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.5,\n    d: \"M4 8c0-2.209 1.791-4 4-4h8c2.209 0 4 1.791 4 4v8c0 2.209-1.791 4-4 4h-8c-2.209 0-4-1.791-4-4v-8z\"\n  }))), _symbol23 || (_symbol23 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-search\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.47 20.53c0.293 0.293 0.768 0.293 1.061 0s0.293-0.768 0-1.061l-1.061 1.061zM17.25 10.5c0 3.728-3.022 6.75-6.75 6.75v1.5c4.556 0 8.25-3.694 8.25-8.25h-1.5zM10.5 17.25c-3.728 0-6.75-3.022-6.75-6.75h-1.5c0 4.556 3.694 8.25 8.25 8.25v-1.5zM3.75 10.5c0-3.728 3.022-6.75 6.75-6.75v-1.5c-4.556 0-8.25 3.694-8.25 8.25h1.5zM10.5 3.75c3.728 0 6.75 3.022 6.75 6.75h1.5c0-4.556-3.694-8.25-8.25-8.25v1.5zM20.53 19.47l-4.188-4.188-1.061 1.061 4.188 4.188 1.061-1.061z\"\n  }))), _symbol24 || (_symbol24 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-eye\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.6364,\n    d: \"M1.091 12c0 0 3.967-7.636 10.909-7.636s10.909 7.636 10.909 7.636-3.967 7.636-10.909 7.636c-6.942 0-10.909-7.636-10.909-7.636z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.6364,\n    d: \"M12 15.273c1.808 0 3.273-1.465 3.273-3.273s-1.465-3.273-3.273-3.273c-1.807 0-3.273 1.465-3.273 3.273s1.465 3.273 3.273 3.273z\"\n  }))), _symbol25 || (_symbol25 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-close-eye\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.6364,\n    d: \"M9.561 4.686c0.766-0.205 1.58-0.322 2.439-0.322 6.942 0 10.909 7.636 10.909 7.636s-0.904 1.741-2.605 3.56M3.654 8.485c-1.673 1.803-2.563 3.515-2.563 3.515s3.967 7.636 10.909 7.636c0.875 0 1.703-0.121 2.481-0.333M11.455 15.227c-1.183-0.198-2.15-1.031-2.541-2.137M12.545 8.773c1.371 0.23 2.452 1.312 2.682 2.682M2.182 2.182l19.636 19.636\"\n  }))), _symbol26 || (_symbol26 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-trash\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    strokeLinejoin: \"round\",\n    d: \"M18 6v12c0 1.105-0.895 2-2 2h-8c-1.105 0-2-0.895-2-2v-12M15 6v-1c0-1.105-0.895-2-2-2h-2c-1.105 0-2 0.895-2 2v1M4 6h16M10 10v6M14 10v6\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-user\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#ffc107\",\n    style: {\n      stroke: \"var(--color2, #ffc107)\"\n    },\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.2857,\n    d: \"M18.857 20.571v-1.714c0-1.894-1.535-3.429-3.429-3.429h-6.857c-1.894 0-3.429 1.535-3.429 3.429v1.714M15.429 8.571c0 1.894-1.535 3.429-3.429 3.429s-3.429-1.535-3.429-3.429c0-1.894 1.535-3.429 3.429-3.429s3.429 1.535 3.429 3.429z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#ffc107\",\n    style: {\n      stroke: \"var(--color2, #ffc107)\"\n    },\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.2857,\n    d: \"M12 0.643c6.272 0 11.357 5.085 11.357 11.357s-5.085 11.357-11.357 11.357c-6.272 0-11.357-5.085-11.357-11.357s5.085-11.357 11.357-11.357z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSymbolDefs);\nexport default __webpack_public_path__ + \"static/media/symbol-defs.083875978215679d37d0c9c65b251d77.svg\";\nexport { ForwardRef as ReactComponent };","import * as Yup from 'yup';\nimport { t } from 'i18next';\n// const { t } = useTranslation();\n\nexport const validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .required(t('requried_name_field'))\n    .min(2, t('name_min'))\n    .max(16, t('name_max'))\n    .matches(/^[A-Za-zА-Яа-яЁёІіЇїЄєҐґ]{2,16}$/, t('name_regexp')),\n  email: Yup.string()\n    .email(t('email_description'))\n    .required(t('requried_email_field'))\n    .matches(/^[a-zA-Z0-9._%+-]+@[a-z.-]+\\.[a-z]{2,}$/, t('email_regexp')),\n  password: Yup.string()\n    .required(t('requried_password_field'))\n    .min(6, t('password_min'))\n    .max(16, t('password_max'))\n    .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/, t('password_regexp')),\n  confirmPassword: Yup.string().when('password', (password, schema) => {\n    return password\n      ? schema\n          .required(t('requried_confirm_pas_field'))\n          .oneOf([Yup.ref('password')], t('confirm_password_regexp'))\n      : schema.notRequired();\n  }),\n});\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 40px;\n\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  width: 280px;\n\n  border-radius: 20px;\n  background-color: var(--white-bckg-clr);\n\n  box-shadow: 3px 8px 14px 0px var(--small-shadow);\n\n  padding: 40px 12px;\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    margin-top: 80px;\n    padding: 60px 75px;\n    border-radius: 40px;\n  }\n`;\n\nexport const FormInputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n\n  &.error .form-input {\n    border-color: red;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n  }\n`;\n\nexport const FormHeader = styled.h2`\n  font-family: Manrope, sans-serif;\n  margin-bottom: 20px;\n  font-weight: 500;\n  font-size: 24px;\n  text-align: center;\n  line-height: normal;\n  font-style: normal;\n\n  color: var(--main-accent-text-clr);\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    font-size: 36px;\n    letter-spacing: 1.44px;\n  }\n`;\n\nexport const FormInput = styled.input`\n  padding-top: 12px;\n  padding-bottom: 12px;\n  padding-left: 16px;\n  padding-right: 85px;\n  width: 256px;\n  font-size: 16px;\n  align-items: center;\n  border: 1px solid var(--main-clr-blue);\n  border-radius: 40px;\n  line-height: 1.4;\n  font-style: normal;\n  outline: none;\n\n  &.input-error {\n    border: 1px solid var(--form-error-red);\n  }\n  &.input-success {\n    border: 1px solid var(--menu-clr-green);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 458px;\n  }\n  &::placeholder {\n    font-family: Manrope, sans-serif;\n    font-weight: 400;\n    letter-spacing: 0.64px;\n    color: var(--main-form-clr);\n  }\n`;\n\nexport const FormInputNameEmail = styled.input`\n  padding-top: 12px;\n  padding-bottom: 12px;\n  padding-left: 16px;\n  padding-right: 60px;\n  width: 256px;\n  font-size: 16px;\n  align-items: center;\n  border: 1px solid var(--main-clr-blue);\n  border-radius: 40px;\n  line-height: 1.4;\n  font-style: normal;\n  outline: none;\n\n  &.input-error {\n    border: 1px solid var(--form-error-red);\n  }\n  &.input-success {\n    border: 1px solid var(--menu-clr-green);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 458px;\n  }\n  &::placeholder {\n    font-family: Manrope, sans-serif;\n    font-weight: 400;\n    letter-spacing: 0.64px;\n    color: var(--main-form-clr);\n  }\n`;\n\nexport const FormButton = styled.button`\n  font-family: Manrope, sans-serif;\n  width: 100%;\n  font-weight: 600;\n  line-height: normal;\n  font-style: normal;\n  letter-spacing: 0.8px;\n  font-size: 20px;\n  color: var(--white-bckg-clr);\n  background-color: var(--main-clr-blue);\n  border: transparent;\n  margin-top: 40px;\n  margin-bottom: 8px;\n  padding: 10px 28px;\n  border-radius: 40px;\n\n  :hover,\n  :focus {\n    background: var(--main-clr-gr_blue);\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 52px;\n    margin-bottom: 16px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-top: 40px;\n  }\n`;\nexport const FormText = styled.p`\n  text-align: center;\n  font-weight: 400;\n  font-size: 12px;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: 0.48px;\n  color: var(--main-form-clr);\n`;\n\nexport const FormLink = styled(Link)`\n  display: inline-block;\n  margin-left: 2px;\n\n  color: var(--main-clr-blue);\n`;\n\nexport const WrapperInput = styled.div`\n  position: relative;\n`;\n\nexport const ErrorText = styled.p`\n  position: absolute;\n  left: 16px;\n  top: 48px;\n  font-family: Manrope, sans-serif;\n  font-size: 8px;\n  font-weight: 400;\n  font-style: normal;\n  line-height: normal;\n  color: var(--form-error-red);\n\n  @media screen and (min-width: 768px) {\n    top: 50px;\n    font-size: 12px;\n  }\n`;\n\nexport const SuccessText = styled.p`\n  position: absolute;\n  left: 16px;\n  top: 48px;\n  font-family: Manrope, sans-serif;\n  font-size: 8px;\n  font-weight: 400;\n  font-style: normal;\n  line-height: normal;\n  color: var(--menu-clr-green);\n\n  @media screen and (min-width: 768px) {\n    top: 50px;\n    font-size: 12px;\n  }\n`;\n\nexport const IconForInput = styled.div`\n  display: flex;\n  gap: 12px;\n  position: absolute;\n  top: 50%;\n  right: 16px;\n  transform: translateY(-50%);\n`;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFormik } from 'formik';\nimport { register } from 'redux/auth/authOperations';\nimport getMessage from 'utils/messages';\nimport { validationSchema } from './ValidationRegister';\n\nimport svg from '../../../images/Icons/symbol-defs.svg';\n\nimport {\n  ErrorText,\n  FormButton,\n  FormContainer,\n  FormHeader,\n  FormInput,\n  FormInputNameEmail,\n  FormInputWrapper,\n  FormLink,\n  FormText,\n  IconForInput,\n  SuccessText,\n  WrapperInput,\n} from './RegisterForm.styled';\n\nconst IconSvgClose = () => {\n  return (\n    <svg width={24} height={24}>\n      <use\n        href={`${svg}#icon-close-eye`}\n        style={{\n          stroke: 'var(--main-clr-blue)',\n        }}\n        width={24}\n        height={24}\n      />\n    </svg>\n  );\n};\n\nconst IconSvgOpen = () => {\n  return (\n    <svg width={24} height={24}>\n      <use\n        href={`${svg}#icon-eye`}\n        style={{\n          stroke: 'var(--main-clr-blue)',\n        }}\n        width={24}\n        height={24}\n      />\n    </svg>\n  );\n};\n\nconst IconSvgSuccess = () => {\n  return (\n    <svg width={24} height={24}>\n      <use\n        href={`${svg}#icon-check`}\n        style={{\n          stroke: 'var(--menu-clr-green)',\n        }}\n        width={24}\n        height={24}\n      />\n    </svg>\n  );\n};\n\nconst RegisterForm = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const [typeForPassword, setTypeForPassword] = useState('password');\n  const [typeForConfirmPassword, setTypeForConfirmPassword] =\n    useState('password');\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    },\n\n    validationSchema: validationSchema,\n\n    onSubmit: async (values, { resetForm }) => {\n      const credentials = {\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      };\n      try {\n        const response = await dispatch(register(credentials));\n        if (response.error) {\n          getMessage(response.error.data.message);\n        } else {\n          resetForm();\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  });\n\n  const handleNameBlur = () => {\n    formik.setTouched({ ...formik.touched, name: true });\n  };\n\n  const handleEmailBlur = () => {\n    formik.setTouched({ ...formik.touched, email: true });\n  };\n\n  const handlePasswordBlur = () => {\n    formik.setTouched({ ...formik.touched, password: true });\n  };\n\n  const handleConfirmPasswordBlur = () => {\n    formik.setTouched({ ...formik.touched, confirmPassword: true });\n  };\n  const showNameError =\n    (formik.touched.name || formik.submitCount > 0) &&\n    formik.errors.name &&\n    formik.values.name;\n\n  const showNameSuccess =\n    formik.touched.name && !formik.errors.name && formik.values.name;\n\n  const showEmailError =\n    (formik.touched.email || formik.submitCount > 0) &&\n    formik.errors.email &&\n    formik.values.email;\n\n  const showEmailSuccess =\n    formik.touched.email && !formik.errors.email && formik.values.email;\n\n  const showPasswordError =\n    (formik.touched.password || formik.submitCount > 0) &&\n    formik.errors.password &&\n    formik.values.password;\n\n  const showPasswordSuccess =\n    formik.touched.password &&\n    !formik.errors.password &&\n    formik.values.password;\n\n  const showConfirmPasswordError =\n    (formik.touched.confirmPassword || formik.submitCount > 0) &&\n    formik.errors.confirmPassword &&\n    formik.values.confirmPassword;\n\n  const showConfirmPasswordSuccess =\n    formik.touched.confirmPassword &&\n    !formik.errors.confirmPassword &&\n    formik.values.confirmPassword;\n\n  const handleClear = field => {\n    formik.setFieldValue(field, '');\n  };\n\n  return (\n    <FormContainer>\n      <form onSubmit={formik.handleSubmit}>\n        <FormHeader>{t('registration')}</FormHeader>\n        <FormInputWrapper>\n          <div>\n            <label htmlFor=\"name\" hidden>\n              Name\n            </label>\n            <WrapperInput>\n              <FormInputNameEmail\n                id=\"name\"\n                value={formik.values.name}\n                onChange={formik.handleChange}\n                name=\"name\"\n                placeholder={t('name')}\n                onBlur={handleNameBlur}\n                className={\n                  showNameError\n                    ? 'input-error'\n                    : showNameSuccess\n                    ? 'input-success'\n                    : ''\n                }\n              />\n              {formik.touched.name && formik.errors.name && (\n                <ErrorText>{formik.errors.name}</ErrorText>\n              )}\n              <IconForInput>\n                {showNameError && (\n                  <svg\n                    width={24}\n                    height={24}\n                    onClick={() => handleClear('name')}\n                  >\n                    <use\n                      href={`${svg}#icon-cross`}\n                      style={{\n                        stroke: 'var(--form-error-red)',\n                      }}\n                      width={24}\n                      height={24}\n                    />\n                  </svg>\n                )}\n                {showNameSuccess && <IconSvgSuccess />}\n              </IconForInput>\n            </WrapperInput>\n          </div>\n          <div>\n            <label htmlFor=\"email\" hidden>\n              Email\n            </label>\n            <WrapperInput>\n              <FormInputNameEmail\n                id=\"email\"\n                name=\"email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                placeholder={t('email')}\n                onBlur={handleEmailBlur}\n                className={\n                  showEmailError\n                    ? 'input-error'\n                    : showEmailSuccess\n                    ? 'input-success'\n                    : ''\n                }\n              />\n              {formik.touched.email && formik.errors.email && (\n                <ErrorText>{formik.errors.email}</ErrorText>\n              )}\n              <IconForInput>\n                {showEmailError && (\n                  <svg\n                    width={24}\n                    height={24}\n                    onClick={() => handleClear('email')}\n                  >\n                    <use\n                      href={`${svg}#icon-cross`}\n                      style={{\n                        stroke: 'var(--form-error-red)',\n                      }}\n                      width={24}\n                      height={24}\n                    />\n                  </svg>\n                )}\n                {showEmailSuccess && <IconSvgSuccess />}\n              </IconForInput>\n            </WrapperInput>\n          </div>\n          <div>\n            <label htmlFor=\"password\" hidden>\n              Password\n            </label>\n            <WrapperInput>\n              <FormInput\n                id=\"password\"\n                type={typeForPassword}\n                name=\"password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                placeholder={t('password')}\n                onBlur={handlePasswordBlur}\n                className={\n                  showPasswordError\n                    ? 'input-error'\n                    : showPasswordSuccess\n                    ? 'input-success'\n                    : ''\n                }\n              />\n              <IconForInput>\n                {typeForPassword === 'password' ? (\n                  <span onClick={() => setTypeForPassword('text')}>\n                    <IconSvgClose />\n                  </span>\n                ) : (\n                  <span onClick={() => setTypeForPassword('password')}>\n                    <IconSvgOpen />\n                  </span>\n                )}\n                {showPasswordError && (\n                  <svg\n                    width={24}\n                    height={24}\n                    onClick={() => handleClear('password')}\n                  >\n                    <use\n                      href={`${svg}#icon-cross`}\n                      style={{\n                        stroke: 'var(--form-error-red)',\n                      }}\n                      width={24}\n                      height={24}\n                    />\n                  </svg>\n                )}\n                {showPasswordSuccess && <IconSvgSuccess />}\n              </IconForInput>\n              {formik.touched.password && formik.errors.password && (\n                <ErrorText>{formik.errors.password}</ErrorText>\n              )}\n              {showPasswordSuccess && (\n                <SuccessText>{t('password_is_secure')}</SuccessText>\n              )}\n            </WrapperInput>\n          </div>\n          <div>\n            <label htmlFor=\"confirmPassword\" hidden>\n              Confirm password\n            </label>\n            <WrapperInput>\n              <FormInput\n                id=\"confirmPassword\"\n                type={typeForConfirmPassword}\n                name=\"confirmPassword\"\n                value={formik.values.confirmPassword}\n                onChange={formik.handleChange}\n                placeholder={t('confirm_password')}\n                onBlur={handleConfirmPasswordBlur}\n                className={\n                  showConfirmPasswordError\n                    ? 'input-error'\n                    : showConfirmPasswordSuccess\n                    ? 'input-success'\n                    : ''\n                }\n              />\n              <IconForInput>\n                {typeForConfirmPassword === 'password' ? (\n                  <span onClick={() => setTypeForConfirmPassword('text')}>\n                    <IconSvgClose />\n                  </span>\n                ) : (\n                  <span onClick={() => setTypeForConfirmPassword('password')}>\n                    <IconSvgOpen />\n                  </span>\n                )}\n                {showConfirmPasswordError && (\n                  <svg\n                    width={24}\n                    height={24}\n                    onClick={() => handleClear('confirmPassword')}\n                  >\n                    <use\n                      href={`${svg}#icon-cross`}\n                      style={{\n                        stroke: 'var(--form-error-red)',\n                      }}\n                      width={24}\n                      height={24}\n                    />\n                  </svg>\n                )}\n                {showConfirmPasswordSuccess && <IconSvgSuccess />}\n              </IconForInput>\n              {formik.touched.confirmPassword &&\n                formik.errors.confirmPassword && (\n                  <ErrorText>{formik.errors.confirmPassword}</ErrorText>\n                )}\n            </WrapperInput>\n          </div>\n        </FormInputWrapper>\n        <FormButton type=\"submit\">{t('registration')}</FormButton>\n        <FormText>\n          {t('registration_form_text')}\n          <FormLink to=\"/login\">{t('login_form')}</FormLink>\n        </FormText>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/Forms/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["validationSchema","Yup","shape","name","required","t","min","max","matches","email","password","confirmPassword","when","schema","oneOf","notRequired","FormContainer","styled","div","_templateObject","_taggedTemplateLiteral","FormInputWrapper","_templateObject2","FormHeader","h2","_templateObject3","FormInput","input","_templateObject4","FormInputNameEmail","_templateObject5","FormButton","button","_templateObject6","FormText","p","_templateObject7","FormLink","Link","_templateObject8","WrapperInput","_templateObject9","ErrorText","_templateObject10","SuccessText","_templateObject11","IconForInput","_templateObject12","IconSvgClose","_jsx","width","height","children","href","concat","svg","style","stroke","IconSvgOpen","IconSvgSuccess","useTranslation","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","typeForPassword","setTypeForPassword","_useState3","_useState4","typeForConfirmPassword","setTypeForConfirmPassword","formik","useFormik","initialValues","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref","resetForm","credentials","response","wrap","_context","prev","next","register","sent","error","getMessage","data","message","t0","console","stop","_x","_x2","apply","arguments","showNameError","touched","submitCount","errors","showNameSuccess","showEmailError","showEmailSuccess","showPasswordError","showPasswordSuccess","showConfirmPasswordError","showConfirmPasswordSuccess","handleClear","field","setFieldValue","_jsxs","handleSubmit","htmlFor","hidden","id","value","onChange","handleChange","placeholder","onBlur","setTouched","_objectSpread","className","onClick","type","to","RegisterForm"],"sourceRoot":""}